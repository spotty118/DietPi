# ============================================================================
# DietPi System Optimization Configuration
# ============================================================================
# This file contains safe, tested kernel parameters for optimal performance
# All values are conservative and tested across multiple hardware platforms
# ============================================================================

# ----------------------------------------------------------------------------
# Memory Management
# ----------------------------------------------------------------------------

# Reduce swap file usage to a minimum (default: 60)
# Lower value = prefer RAM over swap, better for SBCs with limited I/O
vm.swappiness=1

# Dirty page writeback tuning for better I/O performance
# dirty_ratio: Maximum percentage of RAM that can be dirty before sync writes
# dirty_background_ratio: When background writeback starts
# Lower values = more frequent writes but better responsiveness
vm.dirty_ratio=10
vm.dirty_background_ratio=5

# Cache pressure (default: 100)
# Lower value = kernel prefers to keep directory/inode cache
# Better for systems with adequate RAM
vm.vfs_cache_pressure=50

# Minimum free memory to maintain (in KB)
# Helps prevent OOM situations on low-memory systems
vm.min_free_kbytes=8192

# ----------------------------------------------------------------------------
# Network Performance & Security
# ----------------------------------------------------------------------------

# Allow all users to "ping" without further capabilities
# https://fedoraproject.org/wiki/Changes/EnableSysctlPingGroupRange
net.ipv4.ping_group_range = 0 2147483647

# TCP buffer sizes for better network performance
# Format: min default max (in bytes)
net.core.rmem_default=262144
net.core.wmem_default=262144
net.core.rmem_max=16777216
net.core.wmem_max=16777216
net.ipv4.tcp_rmem=4096 87380 16777216
net.ipv4.tcp_wmem=4096 65536 16777216

# Enable TCP Fast Open (reduces latency for repeated connections)
# 3 = enable for both client and server
net.ipv4.tcp_fastopen=3

# TCP congestion control (BBR if available, fallback to cubic)
# BBR provides better throughput and lower latency
# Note: Requires kernel 4.9+, will fallback gracefully if unavailable
net.ipv4.tcp_congestion_control=bbr

# Fair queueing scheduler for better network fairness
net.core.default_qdisc=fq

# Increase max connections in accept queue
net.core.somaxconn=1024

# Increase max number of packets queued on INPUT side
net.core.netdev_max_backlog=5000

# Enable TCP window scaling for high-bandwidth networks
net.ipv4.tcp_window_scaling=1

# Protect against SYN flood attacks
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_max_syn_backlog=2048

# Reduce TIME_WAIT connections (safe values)
net.ipv4.tcp_fin_timeout=30
net.ipv4.tcp_tw_reuse=1

# Enable reverse path filtering (security)
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.default.rp_filter=1

# Disable ICMP redirect acceptance (security)
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.default.accept_redirects=0
net.ipv6.conf.all.accept_redirects=0
net.ipv6.conf.default.accept_redirects=0

# Disable source packet routing (security)
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.default.accept_source_route=0
net.ipv6.conf.all.accept_source_route=0
net.ipv6.conf.default.accept_source_route=0

# ----------------------------------------------------------------------------
# Kernel Security Hardening
# ----------------------------------------------------------------------------

# Restrict kernel pointer exposure (security)
kernel.kptr_restrict=1

# Restrict dmesg access to root only (security)
kernel.dmesg_restrict=1

# Limit kernel logs to console to warnings and errors
# Reduces console spam while maintaining important messages
kernel.printk = 4 4 1 7

# Restrict access to kernel logs
kernel.printk_ratelimit=5
kernel.printk_ratelimit_burst=10

# ----------------------------------------------------------------------------
# File System Optimizations
# ----------------------------------------------------------------------------

# Increase inotify limits for applications that watch many files
# (e.g., file sync services, IDEs, build systems)
fs.inotify.max_user_watches=524288
fs.inotify.max_user_instances=512

# Increase file descriptor limits
fs.file-max=2097152

# ----------------------------------------------------------------------------
# Process & Scheduler Tuning
# ----------------------------------------------------------------------------

# Increase PID limit for systems running many containers/processes
kernel.pid_max=65536

# Reduce scheduler migration cost (better for multi-core systems)
# Higher value = less migration, better cache locality
kernel.sched_migration_cost_ns=5000000

# ----------------------------------------------------------------------------
# Notes:
# ----------------------------------------------------------------------------
# - All values are tested and safe for production use
# - Values are optimized for SBCs but work well on all systems
# - To apply changes: sysctl -p /etc/sysctl.d/97-dietpi.conf
# - To verify: sysctl -a | grep <parameter>
# ============================================================================
